// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Reservation details component Details: renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 1,
      "paddingTop": 20,
    }
  }
>
  <View
    style={
      Object {
        "padding": 5,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#2e3131",
          "fontSize": 15,
          "marginLeft": 10,
          "textAlign": "left",
        }
      }
    >
      Name:
    </Text>
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      style={
        Object {
          "borderColor": "#8c14fc",
          "borderRadius": 10,
          "borderWidth": 0.2,
          "height": 40,
          "margin": 10,
          "paddingLeft": 10,
        }
      }
      underlineColorAndroid="transparent"
    />
    <Text
      style={
        Object {
          "color": "#2e3131",
          "fontSize": 15,
          "marginLeft": 10,
          "textAlign": "left",
        }
      }
    >
      Hotel name:
    </Text>
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      style={
        Object {
          "borderColor": "#8c14fc",
          "borderRadius": 10,
          "borderWidth": 0.2,
          "height": 40,
          "margin": 10,
          "paddingLeft": 10,
        }
      }
      underlineColorAndroid="transparent"
    />
    <Text
      style={
        Object {
          "color": "#2e3131",
          "fontSize": 15,
          "marginLeft": 10,
          "textAlign": "left",
        }
      }
    >
      Arrival time:
    </Text>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        defaultValue="3/14/2019"
        editable={false}
        pointerEvents="none"
        style={
          Object {
            "borderColor": "#8c14fc",
            "borderRadius": 10,
            "borderWidth": 0.2,
            "height": 40,
            "margin": 10,
            "paddingLeft": 10,
          }
        }
        underlineColorAndroid="transparent"
      />
    </View>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onRequestClose={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "margin": 10,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "white",
                "borderRadius": 13,
                "marginBottom": 8,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "borderBottomColor": "#d5d5d5",
                "borderBottomWidth": 0.5,
                "padding": 14,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#8f8f8f",
                    "fontSize": 13,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Pick a date
            </Text>
          </View>
          <View
            onStartShouldSetResponderCapture={[Function]}
          >
            <DatePickerIOS
              date={2019-03-15T03:31:22.460Z}
              minuteInterval={1}
              mode="date"
              onCancel={[Function]}
              onConfirm={[Function]}
              onDateChange={[Function]}
              onHideAfterConfirm={[Function]}
            />
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#d5d5d5",
                "borderTopWidth": 0.5,
                "height": 57,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "normal",
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Confirm
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "padding": 10,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Cancel
          </Text>
        </View>
      </View>
    </Modal>
    <Text
      style={
        Object {
          "color": "#2e3131",
          "fontSize": 15,
          "marginLeft": 10,
          "textAlign": "left",
        }
      }
    >
      Departure time:
    </Text>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        defaultValue="3/14/2019"
        editable={false}
        pointerEvents="none"
        style={
          Object {
            "borderColor": "#8c14fc",
            "borderRadius": 10,
            "borderWidth": 0.2,
            "height": 40,
            "margin": 10,
            "paddingLeft": 10,
          }
        }
        underlineColorAndroid="transparent"
      />
    </View>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onRequestClose={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "margin": 10,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "white",
                "borderRadius": 13,
                "marginBottom": 8,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "borderBottomColor": "#d5d5d5",
                "borderBottomWidth": 0.5,
                "padding": 14,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#8f8f8f",
                    "fontSize": 13,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Pick a date
            </Text>
          </View>
          <View
            onStartShouldSetResponderCapture={[Function]}
          >
            <DatePickerIOS
              date={2019-03-15T03:31:22.460Z}
              minuteInterval={1}
              mode="date"
              onCancel={[Function]}
              onConfirm={[Function]}
              onDateChange={[Function]}
              onHideAfterConfirm={[Function]}
            />
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#d5d5d5",
                "borderTopWidth": 0.5,
                "height": 57,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "normal",
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Confirm
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "padding": 10,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Cancel
          </Text>
        </View>
      </View>
    </Modal>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "margin": 20,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#cf000f",
          "borderRadius": 10,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "width": "40%",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "white",
            "fontWeight": "bold",
            "textAlign": "center",
          }
        }
      >
        Delete
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#8c14fc",
          "borderRadius": 10,
          "borderWidth": 1,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "width": "40%",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#8c14fc",
            "fontWeight": "bold",
            "textAlign": "center",
          }
        }
      >
        Update
      </Text>
    </View>
  </View>
</View>
`;
